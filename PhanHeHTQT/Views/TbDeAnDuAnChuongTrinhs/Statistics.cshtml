@model IEnumerable<PhanHeHTQT.Models.TbDeAnDuAnChuongTrinh>
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Statistics";
    List<string> label = new List<string>();
    List<double?> data = new List<double?>();
    foreach (var item in Model)
    {
        label.Add(item.TenDeAnDuAnChuongTrinh);
        data.Add(item.TongKinhPhi);
    }
    string label_ = JsonConvert.SerializeObject(label.ToArray());
    string data_ = JsonConvert.SerializeObject(data.ToArray());
    Console.WriteLine(label_);
    string labelJson = "", dataJson = "";
    Dictionary<string, int> Times_Thu = new Dictionary<string, int>();
    foreach (var item in Model)
    {
        string nguon = "";
        if (item.IdNguonKinhPhiDeAnDuAnChuongTrinh.HasValue)
        {
            nguon = item.IdNguonKinhPhiDeAnDuAnChuongTrinhNavigation.NguonKinhPhiChoDeAn;
        }
        if (Times_Thu.ContainsKey(nguon)) ++Times_Thu[nguon];
        else Times_Thu[nguon] = 1;
    }
    List<string> label1 = new List<string>();
    List<int> data1 = new List<int>();
    foreach (var it in Times_Thu)
    {
        label1.Add(it.Key);
        data1.Add(it.Value);
    }
    labelJson = JsonConvert.SerializeObject(label1);
    dataJson = JsonConvert.SerializeObject(data1);
    Dictionary<string, double> SumNguonKinhPhi = new Dictionary<string, double>();

    foreach (var item in Model)
    {
        string tien = "";
        double giaTri = 0;

        // Kiểm tra nếu IdNguonKinhPhiDeAnDuAnChuongTrinh có giá trị
        
        if (item.IdNguonKinhPhiDeAnDuAnChuongTrinh.HasValue)
        {
            tien = item.IdNguonKinhPhiDeAnDuAnChuongTrinhNavigation.NguonKinhPhiChoDeAn;
            giaTri = item.TongKinhPhi.HasValue ? item.TongKinhPhi.Value : 0; // Lấy giá trị kinh phí
        }

        // Cộng giá trị vào từ điển
        if (SumNguonKinhPhi.ContainsKey(tien))
        {
            SumNguonKinhPhi[tien] += giaTri; // Cộng dồn giá trị nếu nguồn kinh phí đã tồn tại
        }
        else
        {
            SumNguonKinhPhi[tien] = giaTri; // Thêm mới nguồn kinh phí nếu chưa tồn tại
        }
    }

    // Chuyển kết quả từ từ điển sang danh sách (đảm bảo không thêm lặp lại)
    List<string> label2 = new List<string>(SumNguonKinhPhi.Keys); // Danh sách các nguồn kinh phí
    List<double> data2 = new List<double>(SumNguonKinhPhi.Values); // Tổng giá trị tương ứng

    // Chuyển đổi sang JSON
    string labelJson2 = JsonConvert.SerializeObject(label2);
    string dataJson2 = JsonConvert.SerializeObject(data2);

}
<head>
    <meta charset="utf-8">
    <title>Visualize Data Beautifully Using JS Charts</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
</head>
<div class="container" style="margin-bottom:100px">
    <canvas id="myChart"></canvas>
</div>
<script>
    let myChart = document.getElementById('myChart').getContext('2d');
    // Global Options
    Chart.defaults.global.defaultFontFamily = 'Lato';
    Chart.defaults.global.defaultFontSize = 18;
    Chart.defaults.global.defaultFontColor = '#777';

    let massPopChart = new Chart(myChart, {
        type: 'bar', // bar, horizontalBar, pie, line, doughnut, radar, polarArea
        data: {
            labels: @Html.Raw(label_),
            datasets: [{
                label: 'Tổng kinh phí',
                data: @Html.Raw(data_)
                        ,
                //backgroundColor:'green',
                backgroundColor: (function () {
                    const dataArray = @Html.Raw(data_); // Chèn dữ liệu JavaScript từ Razor
                    return new Array(dataArray.length).fill('rgb(30,41,107)'); // Tạo mảng màu xanh với chiều dài tương ứng
                })(),
                borderWidth: 1,
                borderColor: '#777',
                hoverBorderWidth: 3,
                hoverBorderColor: '#000'
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }],
                xAxes: [{
                    ticks: {
                        autoSkip: false, // Hiển thị đầy đủ các nhãn
                        fontSize: 16, // Giảm kích thước font chữ
                        callback: function (value) {
                            // Chia nhãn thành các dòng dựa trên độ dài
                            let words = value.split(' '); // Tách nhãn thành mảng từ
                            let lines = [];
                            let line = '';
                            words.forEach(word => {
                                if ((line + word).length > 10) { // Đặt giới hạn mỗi dòng là 15 ký tự
                                    lines.push(line.trim());
                                    line = '';
                                }
                                line += word + ' ';
                            });
                            if (line) lines.push(line.trim()); // Thêm dòng còn lại
                            return lines; // Trả về mảng dòng
                        }
                    }
                }],
            },
            title:
            {
                display: true,
                text: 'THỐNG KÊ TỔNG KINH PHÍ CÁC ĐỀ ÁN DỰ ÁN CHƯƠNG TRÌNH',
                fontSize: 25
            },
            legend:
            {
                display: true,
                position: 'right',
                labels: {
                    fontColor: '#000'
                }
            },
            layout:
            {
                padding: {
                    left: 50,
                    right: 0,
                    bottom: 0,
                    top: 0
                }
            },
            tooltips: {
                enabled: true
            }
        }
    });

</script>
<div class="popup">
    <div class="popup" style="margin-bottom:100px">
        <canvas id="myChartn"></canvas>
    </div>
</div>
<div class="popup">
    <div class="popup" style="margin-bottom:100px">
        <canvas id="myChart3"></canvas>
    </div>
</div>
<div class="popup" style="margin-bottom:100px; width: 100%">
    <div class="popup">
        <canvas id="myChart4"></canvas>
    </div>
</div>
<script>
    // Dữ liệu từ C#
    const labels = @Html.Raw(label_); //
    const data = @Html.Raw(data_);    //

    // Lấy phần tử canvas
    const ctx = document.getElementById('myChartn').getContext('2d');

    // Cấu hình biểu đồ
    const config = {
        type: 'pie',
        data: {
            labels: labels,
            datasets: [{
                data: data,
                backgroundColor: ['rgba(33, 150, 243, 0.8)', 'rgba(56, 142, 60, 0.8)', 'rgba(253, 216, 53, 0.8)', 'rgba(255, 87, 34, 0.8)', 'rgba(103, 58, 183, 0.8)', 'rgba(0, 188, 212, 0.8)', 'rgba(255, 64, 129, 0.8)', 'rgba(158, 158, 158, 0.8)', 'rgba(245, 34, 45, 0.8)', 'rgba(0, 150, 136, 0.8)', 'rgba(121, 85, 72, 0.8)', 'rgba(253, 216, 53, 0.8)', 'rgba(21, 101, 192, 0.8)', 'rgba(0, 105, 92, 0.8)', 'rgba(96, 125, 139, 0.8)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            title: {
                display: true,
                text: 'CƠ CẤU KINH PHÍ',
                fontSize: 25
            },
            maintainAspectRatio: false,// Để thu phóng tự do
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                title: {
                    display: true,
                    text: 'Biểu đồ phân loại theo ca'
                }
            }
        }
    };

    // Vẽ biểu đồ
    new Chart(ctx, config);

</script>
<script>
    // Dữ liệu từ C#
    const labels1 = @Html.Raw(labelJson); //
    const data1 = @Html.Raw(dataJson);    //

    // Lấy phần tử canvas
    const ctx1 = document.getElementById('myChart3').getContext('2d');

    // Cấu hình biểu đồ
    const config1 = {
        type: 'pie',
        data: {
            labels: labels1,
            datasets: [{
                data: data1,
                backgroundColor: ['rgba(33, 150, 243, 0.8)', 'rgba(56, 142, 60, 0.8)', 'rgba(253, 216, 53, 0.8)', 'rgba(255, 87, 34, 0.8)', 'rgba(103, 58, 183, 0.8)', 'rgba(0, 188, 212, 0.8)', 'rgba(255, 64, 129, 0.8)', 'rgba(158, 158, 158, 0.8)', 'rgba(245, 34, 45, 0.8)', 'rgba(0, 150, 136, 0.8)', 'rgba(121, 85, 72, 0.8)', 'rgba(253, 216, 53, 0.8)', 'rgba(21, 101, 192, 0.8)', 'rgba(0, 105, 92, 0.8)', 'rgba(96, 125, 139, 0.8)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            title: {
                display: true,
                text: 'CƠ CẤU NGUỒN NGÂN SÁCH THEO SỐ LƯỢNG ĐỀ ÁN',
                fontSize: 25
            },
            maintainAspectRatio: false,// Để thu phóng tự do
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                title: {
                    display: true,
                    text: 'Biểu đồ phân loại theo ca'
                }
            }
        }
    };

    // Vẽ biểu đồ
    new Chart(ctx1, config1);

</script>


<script>
    let myChart4 = document.getElementById('myChart4').getContext('2d');
    // Global Options
    Chart.defaults.global.defaultFontFamily = 'Lato';
    Chart.defaults.global.defaultFontSize = 18;
    Chart.defaults.global.defaultFontColor = '#777';

    let massPopChart4 = new Chart(myChart4, {
        type: 'bar', // bar, horizontalBar, pie, line, doughnut, radar, polarArea
        data: {
            labels: @Html.Raw(labelJson),
            datasets: [{
                label: 'Số đề án dự án',
                data: @Html.Raw(dataJson),
                backgroundColor: (function () {
                    const dataArray = @Html.Raw(dataJson); // Chèn dữ liệu JavaScript từ Razor
                    return new Array(dataArray.length).fill('rgb(30,41,107)'); // Tạo mảng màu xanh với chiều dài tương ứng
                })(),
                borderWidth: 1,
                borderColor: '#777',
                hoverBorderWidth: 3,
                hoverBorderColor: '#000',
                barThickness: 10,
            }]
        },
        options: {
            responsive: true,
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }],
                xAxes: [{
                    ticks: {
                        autoSkip: false, // Hiển thị đầy đủ các nhãn
                        fontSize: 16, // Giảm kích thước font chữ
                        callback: function (value) {
                            // Chia nhãn thành các dòng dựa trên độ dài
                            let words = value.split(' '); // Tách nhãn thành mảng từ
                            let lines = [];
                            let line = '';
                            words.forEach(word => {
                                if ((line + word).length > 25) { // Đặt giới hạn mỗi dòng là 15 ký tự
                                    lines.push(line.trim());
                                    line = '';
                                }
                                line += word + ' ';
                            });
                            if (line) lines.push(line.trim()); // Thêm dòng còn lại
                            return lines; // Trả về mảng dòng
                        }
                    }
                }],
            },
            title: {
                display: true,
                text: 'THỐNG KÊ NGUỒN NGÂN SÁCH THEO SỐ LƯỢNG ĐỀ ÁN',
                fontSize: 25
            },
            legend: {
                display: true,
                position: 'right',
                labels: {
                    fontColor: '#000'
                }
            },
            layout: {
                padding: {
                    left: 50,
                    right: 0,
                    bottom: 0,
                    top: 0
                }
            },
            tooltips: {
                enabled: true
            }
        }
    });
</script>
<div class="popup">
    <div class="popup" style="margin-bottom:100px">
        <canvas id="myChart5"></canvas>
    </div>
</div>
<script>
    // Dữ liệu từ C#
    const labels5 = @Html.Raw(labelJson2); //
    const data5 = @Html.Raw(dataJson2);    //

    // Lấy phần tử canvas
    const ctx5 = document.getElementById('myChart5').getContext('2d');

    // Cấu hình biểu đồ
    const config5 = {
        type: 'pie',
        data: {
            labels: labels5,
            datasets: [{
                data: data5,
                backgroundColor: ['rgba(33, 150, 243, 0.8)', 'rgba(56, 142, 60, 0.8)', 'rgba(253, 216, 53, 0.8)', 'rgba(255, 87, 34, 0.8)', 'rgba(103, 58, 183, 0.8)', 'rgba(0, 188, 212, 0.8)', 'rgba(255, 64, 129, 0.8)', 'rgba(158, 158, 158, 0.8)', 'rgba(245, 34, 45, 0.8)', 'rgba(0, 150, 136, 0.8)', 'rgba(121, 85, 72, 0.8)', 'rgba(253, 216, 53, 0.8)', 'rgba(21, 101, 192, 0.8)', 'rgba(0, 105, 92, 0.8)', 'rgba(96, 125, 139, 0.8)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            title: {
                display: true,
                text: 'CƠ CẤU NGUỒN KINH PHÍ THEO TỔNG KINH PHÍ ĐỀ ÁN DỰ ÁN',
                fontSize: 25
            },
            maintainAspectRatio: false,// Để thu phóng tự do
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                title: {
                    display: true,
                    text: 'Biểu đồ phân loại theo ca'
                }
            }
        }
    };

    // Vẽ biểu đồ
    new Chart(ctx5, config5);

</script>
<div class="popup" style="margin-bottom:100px; width: 100%">
    <div class="popup">
        <canvas id="myChart6"></canvas>
    </div>
</div>
<script>
    let myChart6 = document.getElementById('myChart6').getContext('2d');
    // Global Options
    Chart.defaults.global.defaultFontFamily = 'Lato';
    Chart.defaults.global.defaultFontSize = 18;
    Chart.defaults.global.defaultFontColor = '#777';

    let massPopChart6 = new Chart(myChart6, {
        type: 'bar', // bar, horizontalBar, pie, line, doughnut, radar, polarArea
        data: {
            labels: @Html.Raw(labelJson2),
            datasets: [{
                label: 'Tổng kinh phí',
                data: @Html.Raw(dataJson2),
                backgroundColor: (function () {
                    const dataArray = @Html.Raw(dataJson2); // Chèn dữ liệu JavaScript từ Razor
                    return new Array(dataArray.length).fill('rgb(30,41,107)'); // Tạo mảng màu xanh với chiều dài tương ứng
                })(),
                borderWidth: 1,
                borderColor: '#777',
                hoverBorderWidth: 3,
                hoverBorderColor: '#000',
                barThickness: 10,
            }]
        },
        options: {
            responsive: true,
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }],
                xAxes: [{
                    ticks: {
                        autoSkip: false, // Hiển thị đầy đủ các nhãn
                        fontSize: 16, // Giảm kích thước font chữ
                        callback: function (value) {
                            // Chia nhãn thành các dòng dựa trên độ dài
                            let words = value.split(' '); // Tách nhãn thành mảng từ
                            let lines = [];
                            let line = '';
                            words.forEach(word => {
                                if ((line + word).length > 25) { // Đặt giới hạn mỗi dòng là 15 ký tự
                                    lines.push(line.trim());
                                    line = '';
                                }
                                line += word + ' ';
                            });
                            if (line) lines.push(line.trim()); // Thêm dòng còn lại
                            return lines; // Trả về mảng dòng
                        }
                    }
                }],
            },
            title: {
                display: true,
                text: 'THỐNG KÊ NGUỒN KINH PHÍ THEO TỔNG KINH PHÍ ĐỀ ÁN DỰ ÁN',
                fontSize: 25
            },
            legend: {
                display: true,
                position: 'right',
                labels: {
                    fontColor: '#000'
                }
            },
            layout: {
                padding: {
                    left: 50,
                    right: 0,
                    bottom: 0,
                    top: 0
                }
            },
            tooltips: {
                enabled: true
            }
        }
    });
</script>