@model IEnumerable<PhanHeHTQT.Models.TbToChucHopTacQuocTe>
@using Newtonsoft.Json

@{
    ViewData["Title"] = "Statistics";
    string labelJson = "", dataJson = "";
    Dictionary<string, int> Times_Thu = new Dictionary<string, int>();
    foreach (var item in Model)
    {
        string nuoc = "";
        if (item.IdQuocGia.HasValue)
        {
            nuoc = item.IdQuocGiaNavigation.TenNuoc;
        }
        if (Times_Thu.ContainsKey(nuoc)) ++Times_Thu[nuoc];
        else Times_Thu[nuoc] = 1;
    }
    List<string> label = new List<string>();
    List<int> data = new List<int>();
    foreach (var it in Times_Thu)
    {
        label.Add(it.Key);
        data.Add(it.Value);
    }
    labelJson = JsonConvert.SerializeObject(label);
    dataJson = JsonConvert.SerializeObject(data);
}
<head>
    <meta charset="utf-8">
    <title>Visualize Data Beautifully Using JS Charts</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <style>
        /* Phong cách cho nhãn */
        label {
            font-family: 'Arial', sans-serif;
            font-size: 16px;
            font-weight: bold;
            color: #333;
            margin-bottom: 8px;
            display: inline-block;
        }

        /* Phong cách cho dropdown */
        #chartDropdown {
            width: 100%;
            max-width: 500px; /* Giới hạn chiều rộng */
            padding: 12px 16px;
            font-size: 16px;
            font-family: 'Arial', sans-serif;
            color: #333;
            background-color: #f9f9f9;
            border: 2px solid #ddd;
            border-radius: 8px; /* Bo tròn góc */
            outline: none;
            appearance: none; /* Ẩn mũi tên mặc định trên một số trình duyệt */
            cursor: pointer;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Hiệu ứng bóng */
            transition: all 0.3s ease;
        }

            /* Hiệu ứng hover */
            #chartDropdown:hover {
                background-color: #fff;
                border-color: #007BFF;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            }

            /* Hiệu ứng khi focus */
            #chartDropdown:focus {
                border-color: #007BFF;
                box-shadow: 0 0 8px rgba(0, 123, 255, 0.5);
            }

            /* Tùy chỉnh các tùy chọn trong dropdown */
            #chartDropdown option {
                padding: 10px;
                font-size: 14px;
                color: #333;
            }

        /* Hiệu ứng cho tiêu đề */
        h1 {
            font-family: 'Arial', sans-serif;
            font-size: 24px;
            color: #444;
            margin-bottom: 20px;
        }

</style>
</head>
<body>
    <h1>Tùy chọn hiển thị biểu đồ</h1>

    <!-- Dropdown -->
    <label for="chartDropdown">Chọn biểu đồ để hiển thị:</label>
    <select id="chartDropdown" style="margin-bottom:100px">
        <option value="">-- Chọn biểu đồ --</option>
        <option value="chart1">Biểu đồ 1: CƠ CẤU QUỐC GIA HỢP TÁC</option>
        <option value="chart2">Biểu đồ 2: THỐNG KÊ QUỐC GIA HỢP TÁC</option>
    </select>
    <!-- Biểu đồ 1 -->
    <div id="chart1" class="chart-container" style=" margin-bottom:100px">
        <canvas id="myChart1"></canvas>
    </div>

    <!-- Biểu đồ 2 -->
    <div id="chart2" class="chart-container" style="display:none; margin-bottom:100px">
        <canvas id="myChart2"></canvas>
    </div>
   
    <script>
        // Dữ liệu từ C#
        const labels = @Html.Raw(labelJson); //
        const data = @Html.Raw(dataJson);    //

        // Lấy phần tử canvas
        const ctx = document.getElementById('myChart1').getContext('2d');

        // Cấu hình biểu đồ
        const config = {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    data: data,
                    backgroundColor: ['rgba(33, 150, 243, 0.8)', 'rgba(56, 142, 60, 0.8)', 'rgba(253, 216, 53, 0.8)', 'rgba(255, 87, 34, 0.8)', 'rgba(103, 58, 183, 0.8)', 'rgba(0, 188, 212, 0.8)', 'rgba(255, 64, 129, 0.8)', 'rgba(158, 158, 158, 0.8)', 'rgba(245, 34, 45, 0.8)', 'rgba(0, 150, 136, 0.8)', 'rgba(121, 85, 72, 0.8)', 'rgba(253, 216, 53, 0.8)', 'rgba(21, 101, 192, 0.8)', 'rgba(0, 105, 92, 0.8)', 'rgba(96, 125, 139, 0.8)'
                    ], borderWidth: 1
                }]
            },
            options: {
                title: {
                    display: true,
                    text: 'CƠ CẤU QUỐC GIA HỢP TÁC',
                    fontSize: 25,
                },
                maintainAspectRatio: false,// Để thu phóng tự do
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Biểu đồ phân loại theo ca'
                    }
                }
            }
        };

        // Vẽ biểu đồ
        new Chart(ctx, config);

    </script>
    
    <script>
        let myChart = document.getElementById('myChart2').getContext('2d');
        // Global Options
        Chart.defaults.global.defaultFontFamily = 'Lato';
        Chart.defaults.global.defaultFontSize = 18;
        Chart.defaults.global.defaultFontColor = '#777';

        let massPopChart = new Chart(myChart, {
            type: 'bar', // bar, horizontalBar, pie, line, doughnut, radar, polarArea
            data: {
                labels: @Html.Raw(labelJson),
                datasets: [{
                    label: 'Lượt hợp tác',
                    data: @Html.Raw(dataJson),
                    backgroundColor: (function () {
                        const dataArray = @Html.Raw(dataJson); // Chèn dữ liệu JavaScript từ Razor
                        return new Array(dataArray.length).fill('rgb(30,41,107)'); // Tạo mảng màu xanh với chiều dài tương ứng
                    })(),
                    borderWidth: 1,
                    borderColor: '#777',
                    hoverBorderWidth: 3,
                    hoverBorderColor: '#000',
                    barThickness: 10,
                }]
            },
            options: {
                responsive: true,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }],
                    xAxes: [{
                        ticks: {
                            autoSkip: false, // Hiển thị đầy đủ các nhãn
                            fontSize: 16, // Giảm kích thước font chữ
                            callback: function (value) {
                                // Chia nhãn thành các dòng dựa trên độ dài
                                let words = value.split(' '); // Tách nhãn thành mảng từ
                                let lines = [];
                                let line = '';
                                words.forEach(word => {
                                    if ((line + word).length > 20) { // Đặt giới hạn mỗi dòng là 15 ký tự
                                        lines.push(line.trim());
                                        line = '';
                                    }
                                    line += word + ' ';
                                });
                                if (line) lines.push(line.trim()); // Thêm dòng còn lại
                                return lines; // Trả về mảng dòng
                            }
                        }
                    }],
                },
                title: {
                    display: true,
                    text: 'THỐNG KÊ QUỐC GIA HỢP TÁC',
                    fontSize: 25
                },
                legend: {
                    display: true,
                    position: 'right',
                    labels: {
                        fontColor: '#000'
                    }
                },
                layout: {
                    padding: {
                        left: 50,
                        right: 0,
                        bottom: 0,
                        top: 0
                    }
                },
                tooltips: {
                    enabled: true
                }
            }
        });
    </script>
    <!-- code dropdown-->
    <script>
        // Lấy dropdown và các container biểu đồ
        const chartDropdown = document.getElementById('chartDropdown');
        const chartContainers = document.querySelectorAll('.chart-container');

        // Ẩn tất cả các biểu đồ khi tải lại trang
        window.addEventListener('DOMContentLoaded', function () {
            chartContainers.forEach(container => container.style.display = 'none');
        });

        // Lắng nghe sự kiện thay đổi trên dropdown
        chartDropdown.addEventListener('change', function () {
            // Ẩn tất cả các biểu đồ
            chartContainers.forEach(container => container.style.display = 'none');

            // Hiển thị biểu đồ được chọn
            const selectedChartId = chartDropdown.value;
            if (selectedChartId) {
                const selectedChart = document.getElementById(selectedChartId);
                if (selectedChart) {
                    selectedChart.style.display = 'block';
                }
            }
        });
    </script>
</body>
